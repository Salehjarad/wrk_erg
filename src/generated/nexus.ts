/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as Context from "../helpers/context"
import { core } from "@nexus/schema"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    DateTime<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "DateTime";
    upload<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "Upload";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    DateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    upload<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Upload";
  }
}
declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AttachmentWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  DocumentWhereUniqueInput: { // input type
    doc_number?: string | null; // String
    id?: number | null; // Int
  }
  TagInput: { // input type
    value: Array<string | null>; // [String]!
  }
  TagWhereUniqueInput: { // input type
    id?: number | null; // Int
    value?: string | null; // String
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: number | null; // Int
    username?: string | null; // String
  }
}

export interface NexusGenEnums {
  Role: "ADMIN" | "ROOT" | "USER" | "VIEWER"
  Rule: "ADMIN" | "USER" | "VIEWER"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  Upload: any
}

export interface NexusGenRootTypes {
  Attachment: { // root type
    created_at: NexusGenScalars['DateTime']; // DateTime!
    docId: number; // Int!
    file_url?: string | null; // String
    id: number; // Int!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  Document: { // root type
    content: string; // String!
    doc_date: string; // String!
    doc_number: string; // String!
    doc_type: string; // String!
    file_url?: string | null; // String
    id: number; // Int!
    userId: number; // Int!
  }
  DocumentSub: { // root type
    doc?: NexusGenRootTypes['Document'] | null; // Document
    mutation?: string | null; // String
  }
  Mutation: {};
  Query: {};
  Subscription: {};
  Tag: { // root type
    id: number; // Int!
    value: string; // String!
  }
  User: { // root type
    created_at: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    fname?: string | null; // String
    id: number; // Int!
    lname?: string | null; // String
    rule: NexusGenEnums['Rule']; // Rule!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
    username: string; // String!
  }
  UserPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  AttachmentWhereUniqueInput: NexusGenInputs['AttachmentWhereUniqueInput'];
  DocumentWhereUniqueInput: NexusGenInputs['DocumentWhereUniqueInput'];
  TagInput: NexusGenInputs['TagInput'];
  TagWhereUniqueInput: NexusGenInputs['TagWhereUniqueInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  Role: NexusGenEnums['Role'];
  Rule: NexusGenEnums['Rule'];
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
  DateTime: NexusGenScalars['DateTime'];
  Upload: NexusGenScalars['Upload'];
}

export interface NexusGenFieldTypes {
  Attachment: { // field return type
    created_at: NexusGenScalars['DateTime']; // DateTime!
    doc: NexusGenRootTypes['Document']; // Document!
    docId: number; // Int!
    file_url: string | null; // String
    id: number; // Int!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  Document: { // field return type
    attachment: NexusGenRootTypes['Attachment'][]; // [Attachment!]!
    content: string; // String!
    doc_date: string; // String!
    doc_number: string; // String!
    doc_type: string; // String!
    file_url: string | null; // String
    id: number; // Int!
    tags: NexusGenRootTypes['Tag'][]; // [Tag!]!
    user: NexusGenRootTypes['User']; // User!
    userId: number; // Int!
  }
  DocumentSub: { // field return type
    doc: NexusGenRootTypes['Document'] | null; // Document
    mutation: string | null; // String
  }
  Mutation: { // field return type
    addAttachment: NexusGenRootTypes['Attachment'] | null; // Attachment
    addNewUser: string | null; // String
    createDocument: NexusGenRootTypes['Document']; // Document!
    createNewUser: NexusGenRootTypes['UserPayload'] | null; // UserPayload
    deleteDocment: NexusGenRootTypes['Document']; // Document!
    deleteOneUser: NexusGenRootTypes['User'] | null; // User
    deleteTag: boolean | null; // Boolean
    login: NexusGenRootTypes['UserPayload'] | null; // UserPayload
    updateUserFromAdmin: string | null; // String
  }
  Query: { // field return type
    documents: NexusGenRootTypes['Document'][]; // [Document!]!
    helloworld: string | null; // String
    me: NexusGenRootTypes['User'] | null; // User
    search: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    tags: NexusGenRootTypes['Tag'][]; // [Tag!]!
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  Subscription: { // field return type
    document: NexusGenRootTypes['DocumentSub'] | null; // DocumentSub
    live: string | null; // String
  }
  Tag: { // field return type
    doc: NexusGenRootTypes['Document'][]; // [Document!]!
    id: number; // Int!
    value: string; // String!
  }
  User: { // field return type
    created_at: NexusGenScalars['DateTime']; // DateTime!
    docs: NexusGenRootTypes['Document'][]; // [Document!]!
    email: string; // String!
    fname: string | null; // String
    id: number; // Int!
    lname: string | null; // String
    rule: NexusGenEnums['Rule']; // Rule!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
    username: string; // String!
  }
  UserPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
}

export interface NexusGenArgTypes {
  Document: {
    attachment: { // args
      after?: NexusGenInputs['AttachmentWhereUniqueInput'] | null; // AttachmentWhereUniqueInput
      before?: NexusGenInputs['AttachmentWhereUniqueInput'] | null; // AttachmentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    tags: { // args
      after?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      before?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Mutation: {
    addAttachment: { // args
      docId: number; // Int!
      file?: NexusGenScalars['Upload'] | null; // Upload
    }
    addNewUser: { // args
      password: string; // String!
      type: NexusGenEnums['Role']; // Role!
      username: string; // String!
    }
    createDocument: { // args
      content: string; // String!
      doc_date: string; // String!
      doc_number: string; // String!
      doc_type: string; // String!
      file?: NexusGenScalars['Upload'] | null; // Upload
      hashtag: NexusGenInputs['TagInput']; // TagInput!
    }
    createNewUser: { // args
      email: string; // String!
      password: string; // String!
      username: string; // String!
    }
    deleteDocment: { // args
      id: number; // Int!
    }
    deleteOneUser: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    deleteTag: { // args
      value?: string | null; // String
    }
    login: { // args
      password: string; // String!
      username: string; // String!
    }
    updateUserFromAdmin: { // args
      password?: string | null; // String
      type?: NexusGenEnums['Role'] | null; // Role
      uid: number; // Int!
      updateType: string; // String!
      username?: string | null; // String
    }
  }
  Query: {
    documents: { // args
      after?: NexusGenInputs['DocumentWhereUniqueInput'] | null; // DocumentWhereUniqueInput
      before?: NexusGenInputs['DocumentWhereUniqueInput'] | null; // DocumentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    search: { // args
      query?: string | null; // String
    }
    tags: { // args
      after?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      before?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    users: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Tag: {
    doc: { // args
      after?: NexusGenInputs['DocumentWhereUniqueInput'] | null; // DocumentWhereUniqueInput
      before?: NexusGenInputs['DocumentWhereUniqueInput'] | null; // DocumentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  User: {
    docs: { // args
      after?: NexusGenInputs['DocumentWhereUniqueInput'] | null; // DocumentWhereUniqueInput
      before?: NexusGenInputs['DocumentWhereUniqueInput'] | null; // DocumentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Attachment" | "Document" | "DocumentSub" | "Mutation" | "Query" | "Subscription" | "Tag" | "User" | "UserPayload";

export type NexusGenInputNames = "AttachmentWhereUniqueInput" | "DocumentWhereUniqueInput" | "TagInput" | "TagWhereUniqueInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = "Role" | "Rule";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String" | "Upload";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}